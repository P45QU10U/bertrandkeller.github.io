{
  "id": "/2013/02/22/generateurs-de-sites-statiques-templating-rapide-avec-serve",
  "title": "Générateurs de sites statiques - Templating rapide avec serve",
  "url": "http://localhost:4000/2013/02/22/generateurs-de-sites-statiques-templating-rapide-avec-serve/",
  "date": 1361531670,
  "html": "<p>Les générateurs de sites statiques permettent d'agencer des fichiers CSS/JS avec des gabarits HTML. Souvent, la création de gabarits (avec juste du HTML) oblige à construire les liens de l’arborescence à la main et à répéter des structures (sur les différentes pages) comme le header ou le footer. Nathan Smith présente comment il utilise un serveur Ruby (serve), compass et un framework à lui pour générer rapidement de prototypes.</p>\n<div class=\"center\">\nhttps://speakerdeck.com/nathansmith/rapid-templating-with-serve\n</div>\n<p>La présentation est plus pratique que conceptuelle.</p>\n<p>Son principe est que le prototypage lui permet de gagner du temps sur le lancement du projet en mettant en place une structure fonctionnelle (marche très bien quand le processus est homogène sur la techno - ici du ruby).</p>\n<p>En pratique, il indique comment il gère la configuration de partials HTML et de modules SASS pour présenter une interface fonctionnelle s\"adaptant à la taille des différents écrans.</p>\n",
  "markdown": "<p>Les générateurs de sites statiques permettent d'agencer des fichiers CSS/JS avec des gabarits HTML. Souvent, la création de gabarits (avec juste du HTML) oblige à construire les liens de l’arborescence à la main et à répéter des structures (sur les différentes pages) comme le header ou le footer. Nathan Smith présente comment il utilise un serveur Ruby (serve), compass et un framework à lui pour générer rapidement de prototypes.</p>\n<div class=\"center\">\nhttps://speakerdeck.com/nathansmith/rapid-templating-with-serve\n</div>\n<p>La présentation est plus pratique que conceptuelle.</p>\n<p>Son principe est que le prototypage lui permet de gagner du temps sur le lancement du projet en mettant en place une structure fonctionnelle (marche très bien quand le processus est homogène sur la techno - ici du ruby).</p>\n<p>En pratique, il indique comment il gère la configuration de partials HTML et de modules SASS pour présenter une interface fonctionnelle s\"adaptant à la taille des différents écrans.</p>\n"
}