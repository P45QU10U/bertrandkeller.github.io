{
  "id": "/2009/11/19/css-framework-scaffold-pour-le-developpement-rapide",
  "title": "CSS FrameWork : Scaffold pour le développement rapide",
  "url": "http://localhost:4000/2009/11/19/css-framework-scaffold-pour-le-developpement-rapide/",
  "date": 1258645085,
  "html": "<p>CSScaffold est un FrameWork de développement CSS écrit en PHP ; il permet de coder rapidement (...). Scaffold ne comporte pas de fichiers CSS statiques comme les FrameWorks bien connus. Il permet de rédiger un fichier de définition de code à générer pour ses pages.</p>\n<div class=\"center\"><img src=\"{{ site.baseurl }}/assets/scaffold-logo.png\" alt=\"scaffold-logo\" title=\"scaffold-logo\" width=\"415\" height=\"133\" class=\"aligncenter size-full wp-image-1543\" /></div>\n<p>CSScaffold comporte différentes options :</p>\n<ul>\n<li>les constantes</li>\n<li>l'inclusion de fichier</li>\n<li>l'imbrication de classes</li>\n<li>les expressions</li>\n<li>le cache et la compression gzip</li>\n<li>des plugins</li>\n</ul>\n<div class=\"center\"><img src=\"{{ site.baseurl }}/assets/scaffold-diagram.jpg\" alt=\"scaffold-diagram\" title=\"scaffold-diagram\" width=\"535\" height=\"446\" class=\"aligncenter size-full wp-image-1545\" /></div>\n<p>Avec CSScaffold, on se confronte donc à un fichier dans lequel est défini la structuration de la CSS. Seule les éléments particuliers y figurent, les éléments génériques sont appelés par des includes ou des fonctions.</p>\n<p>Le principe de CSScaffold a l'air très intéressant. Il faudrait pouvoir modifier les fonctions de génération des classes pour maîtriser la sémantique de ses gabarits.</p>\n<p>Voir <a href=\"http://wiki.github.com/anthonyshort/csscaffold\" title=\"CSS framework which uses PHP to extend the native abilities of CSS\">CSS framework which uses PHP to extend the native abilities of CSS</a>.</p>\n",
  "markdown": "<p>CSScaffold est un FrameWork de développement CSS écrit en PHP ; il permet de coder rapidement (...). Scaffold ne comporte pas de fichiers CSS statiques comme les FrameWorks bien connus. Il permet de rédiger un fichier de définition de code à générer pour ses pages.</p>\n<div class=\"center\"><img src=\"{{ site.baseurl }}/assets/scaffold-logo.png\" alt=\"scaffold-logo\" title=\"scaffold-logo\" width=\"415\" height=\"133\" class=\"aligncenter size-full wp-image-1543\" /></div>\n<p>CSScaffold comporte différentes options :</p>\n<ul>\n<li>les constantes</li>\n<li>l'inclusion de fichier</li>\n<li>l'imbrication de classes</li>\n<li>les expressions</li>\n<li>le cache et la compression gzip</li>\n<li>des plugins</li>\n</ul>\n<div class=\"center\"><img src=\"{{ site.baseurl }}/assets/scaffold-diagram.jpg\" alt=\"scaffold-diagram\" title=\"scaffold-diagram\" width=\"535\" height=\"446\" class=\"aligncenter size-full wp-image-1545\" /></div>\n<p>Avec CSScaffold, on se confronte donc à un fichier dans lequel est défini la structuration de la CSS. Seule les éléments particuliers y figurent, les éléments génériques sont appelés par des includes ou des fonctions.</p>\n<p>Le principe de CSScaffold a l'air très intéressant. Il faudrait pouvoir modifier les fonctions de génération des classes pour maîtriser la sémantique de ses gabarits.</p>\n<p>Voir <a href=\"http://wiki.github.com/anthonyshort/csscaffold\" title=\"CSS framework which uses PHP to extend the native abilities of CSS\">CSS framework which uses PHP to extend the native abilities of CSS</a>.</p>\n"
}